name: Build and Publish Docker Image
on:
  push:
    branches: [ main ]
  # schedule:
  #   - cron: '*/5 * * * *'

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    environment:
      name: environment
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: pytest
        continue-on-error: true
        id: pytest

      - name: Send email on failure
        if: steps.pytest.outcome == 'failure'
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.ethereal.email
          server_port: 587
          username: cortez.champlin38@ethereal.email           
          password: 3mMtw9BrsWBbWYFsAx
          subject: Failed Build
          to: pthoffman@dons.usfca.edu
          from: Paris
          body: Pytest failed in GitHub Actions workflow

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platforms }}
          push: true
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=FastAPI-App

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "$GITHUB_REF_NAME"
          --repo "$GITHUB_REPOSITORY"
          --notes "Docker image published to ghcr.io/${{ github.repository }}:${{ github.ref_name }}"
