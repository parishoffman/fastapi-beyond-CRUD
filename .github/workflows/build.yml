name: Build

on:
  push:
    branches: [ main ]
  # schedule:
  #   - cron: '*/5 * * * *'  # Fixed cron syntax

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    environment:
      name: environment
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: pytest
        continue-on-error: true
        id: pytest

      - name: Send email on failure
        if: steps.pytest.outcome == 'failure'
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.ethereal.email
          server_port: 587
          username: cortez.champlin38@ethereal.email           
          password: 3mMtw9BrsWBbWYFsAx
          subject: Failed Build
          to: pthoffman@dons.usfca.edu
          from: Paris
          body: Pytest failed in GitHub Actions workflow

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: pthoffman/main
          tags: |
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "$GITHUB_REF_NAME"
          --repo "$GITHUB_REPOSITORY"
          --notes "Docker image published to ghcr.io/${{ github.repository }}:${{ github.ref_name }}"
