name: Build
on:
  push:
    branches: [ main ]
  # schedule:
  #   - cron: '*/5 * * * *'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment:
      name: environment
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest
      - name: Run tests
        run: pytest
        continue-on-error: true
        id: pytest
      - name: Send email on failure
        if: steps.pytest.outcome == 'failure'
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.ethereal.email
          server_port: 587
          username: cortez.champlin38@ethereal.email           
          password: 3mMtw9BrsWBbWYFsAx
          subject: Failed Build
          to: pthoffman@dons.usfca.edu
          from: Paris
          body: Pytest failed in GitHub Actions workflow

  github-release:
    name: Sign the Python distribution and upload to GitHub Release
    needs:
      - test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "$GITHUB_REF_NAME"
          --repo "$GITHUB_REPOSITORY"
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          "$GITHUB_REF_NAME" dist/**
          --repo "$GITHUB_REPOSITORY"
